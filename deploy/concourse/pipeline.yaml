jobs:
  - name: tests
    public: true
    plan:
      - get: code
        trigger: true
      - in_parallel:
          - task: compile check
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: golang
                  tag: 1.13-buster
              inputs:
                - name: code
              caches:
                - path: cached-gopath
              run:
                dir: code
                path: sh
                args:
                  - -ce
                  - |
                    export GOPATH=$(CDPATH= cd -- "$(dirname -- "$0")/../cached-gopath" && pwd -P)

                    echo Compiling...
                    go build .
                    echo Done
          - task: test and lint
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: golang
                  tag: 1.13-buster
              inputs:
                - name: code
              caches:
                - path: cached-gopath
              params:
                GOLANGCI_LINT_VERSION: v1.19.1
              run:
                dir: code
                path: sh
                args:
                  - -ce
                  - |
                    export GOPATH=$(CDPATH= cd -- "$(dirname -- "$0")/../cached-gopath" && pwd -P)

                    echo "Installing golangci-lint version '${GOLANGCI_LINT_VERSION}'"
                    curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s "${GOLANGCI_LINT_VERSION}"
                    export PATH="${PATH}:$(pwd)/bin"

                    golangci-lint run

                    echo "Installing latest golint"
                    GO111MODULE=off go get -u golang.org/x/lint/golint
                    export PATH="${PATH}:${GOPATH}/bin"

                    golint ./...

                    echo Done

  - name: build docker image
    public: true
    plan:
      - get: code
        trigger: true
        passed:
          - tests
      - put: docker-image
        params:
          build: code
          cache: true # Set to false on first build
        get_params:
          skip_download: true

  - name: deploy to test
    serial: true
    plan:
      - in_parallel:
          - get: code
            trigger: true
            passed:
              - build docker image
          - get: docker-image
            trigger: true
            passed:
              - build docker image
            params:
              skip_download: true
      - put: deploy version-monitor
        resource: helm-test
        params:
          chart: code/deploy/helm-chart
          release: version-monitor
          namespace: ae-ops-version-monitor
          show_diff: true
          override_values:
            - key: image.repository
              path: docker-image/repository
              type: string
            - key: image.digest
              path: docker-image/digest
            - key: ingress.host
              value: version-manager.test.cloudhh.de

  - name: deploy to dev
    serial: true
    plan:
      - in_parallel:
          - get: code
            trigger: true
            passed:
              - deploy to test
          - get: docker-image
            trigger: true
            passed:
              - deploy to test
            params:
              skip_download: true

      - put: deploy version-monitor
        resource: helm-dev
        params:
          chart: code/deploy/helm-chart
          release: version-monitor
          namespace: ae-ops-version-monitor
          show_diff: true
          override_values:
            - key: image.repository
              path: docker-image/repository
              type: string
            - key: image.digest
              path: docker-image/digest
            - key: ingress.host
              value: version-manager.dev.cloudhh.de

  - name: deploy to qa
    serial: true
    plan:
      - in_parallel:
          - get: code
            trigger: true
            passed:
              - deploy to dev
          - get: docker-image
            trigger: true
            passed:
              - deploy to dev
            params:
              skip_download: true

      - put: deploy version-monitor
        resource: helm-qa
        params:
          chart: code/deploy/helm-chart
          release: version-monitor
          namespace: ae-ops-version-monitor
          show_diff: true
          override_values:
            - key: image.repository
              path: docker-image/repository
              type: string
            - key: image.digest
              path: docker-image/digest
            - key: ingress.host
              value: version-manager.qa.cloudhh.de

  - name: deploy to prod
    serial: true
    plan:
      - in_parallel:
          - get: code
            trigger: true
            passed:
              - deploy to qa
          - get: docker-image
            trigger: true
            passed:
              - deploy to qa
            params:
              skip_download: true

      - put: deploy version-monitor
        resource: helm-prod
        params:
          chart: code/deploy/helm-chart
          release: version-monitor
          namespace: ae-ops-version-monitor
          show_diff: true
          override_values:
            - key: image.repository
              path: docker-image/repository
              type: string
            - key: image.digest
              path: docker-image/digest
            - key: ingress.host
              value: version-manager.prod.cloudhh.de


resources:
  - name: code
    icon: github-circle
    type: git
    source:
      uri: git@github.com:fielmann-ag/version-monitor.git
      branch: master
      private_key: ((git-ssh-private-key))

  - name: docker-image
    type: docker-image
    source:
      repository: 720927046408.dkr.ecr.eu-central-1.amazonaws.com/version-monitor.infrastructure.ops.ae
      aws_access_key_id: ((container-aws-access-key-id))
      aws_secret_access_key: ((container-aws-secret-access-key))

  - name: helm-test
    type: helm
    source:
      cluster_url: https://api.kubernetes.test.cloudhh.de/
      cluster_ca: ((stage-test-k8s-cluster-ca-base64))
      admin_cert: ((stage-test-k8s-admin-cert-base64))
      admin_key: ((stage-test-k8s-admin-key-base64))
      helm_init_server: true
      helm_history_max: 10
      tiller_service_account: admin
      tiller_namespace: ae-ops-version-monitor

  - name: helm-dev
    type: helm
    source:
      cluster_url: https://api.kubernetes.dev.cloudhh.de/
      cluster_ca: ((stage-dev-k8s-cluster-ca-base64))
      admin_cert: ((stage-dev-k8s-admin-cert-base64))
      admin_key: ((stage-dev-k8s-admin-key-base64))
      helm_init_server: true
      helm_history_max: 10
      tiller_service_account: admin
      tiller_namespace: ae-ops-version-monitor

  - name: helm-qa
    type: helm
    source:
      cluster_url: https://api.kubernetes.qa.cloudhh.de/
      cluster_ca: ((stage-qa-k8s-cluster-ca-base64))
      admin_cert: ((stage-qa-k8s-admin-cert-base64))
      admin_key: ((stage-qa-k8s-admin-key-base64))
      helm_init_server: true
      helm_history_max: 10
      tiller_service_account: admin
      tiller_namespace: ae-ops-version-monitor

  - name: helm-prod
    type: helm
    source:
      cluster_url: https://api.kubernetes.prod.cloudhh.de/
      cluster_ca: ((stage-prod-k8s-cluster-ca-base64))
      admin_cert: ((stage-prod-k8s-admin-cert-base64))
      admin_key: ((stage-prod-k8s-admin-key-base64))
      helm_init_server: true
      helm_history_max: 10
      tiller_service_account: admin
      tiller_namespace: ae-ops-version-monitor


resource_types:
  - name: helm
    type: docker-image
    source:
      repository: linkyard/concourse-helm-resource
      tag: 2.14.1-1
